var _user$project$Main$blueSky = A3(_elm_lang$core$Color$rgb, 174, 238, 238);
var _user$project$Main$jump = function (bird) {
	return _elm_lang$core$Native_Utils.update(
		bird,
		{vy: 8});
};
var _user$project$Main$physics = function (bird) {
	return _elm_lang$core$Native_Utils.update(
		bird,
		{y: bird.y + bird.vy});
};
var _user$project$Main$gravityValue = 0.45;
var _user$project$Main$_p0 = {ctor: '_Tuple2', _0: 600, _1: 400};
var _user$project$Main$gameWidth = _user$project$Main$_p0._0;
var _user$project$Main$gameHeight = _user$project$Main$_p0._1;
var _user$project$Main$gravity = function (bird) {
	return _elm_lang$core$Native_Utils.update(
		bird,
		{
			vy: (_elm_lang$core$Native_Utils.cmp(bird.y, 0 - (_user$project$Main$gameHeight / 2)) > 0) ? (bird.vy - _user$project$Main$gravityValue) : 0
		});
};
var _user$project$Main$updateFlappy = function (bird) {
	return _user$project$Main$physics(
		_user$project$Main$gravity(bird));
};
var _user$project$Main$update = F2(
	function (msg, game) {
		var _p1 = msg;
		if (_p1.ctor === 'TimeUpdate') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					game,
					{
						bird: _user$project$Main$updateFlappy(game.bird)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					game,
					{
						bird: _user$project$Main$jump(game.bird)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$view = function (game) {
	var groundY = 10;
	var birdImage = A3(_evancz$elm_graphics$Element$image, 35, 35, 'flappy.png');
	var bird = game.bird;
	var _p2 = game.windowDimensions;
	var w = _p2._0;
	var h = _p2._1;
	return _evancz$elm_graphics$Element$toHtml(
		A4(
			_evancz$elm_graphics$Element$container,
			w,
			h,
			_evancz$elm_graphics$Element$middle,
			A3(
				_evancz$elm_graphics$Collage$collage,
				_user$project$Main$gameWidth,
				_user$project$Main$gameHeight,
				{
					ctor: '::',
					_0: A2(
						_evancz$elm_graphics$Collage$filled,
						_user$project$Main$blueSky,
						A2(_evancz$elm_graphics$Collage$rect, _user$project$Main$gameWidth, _user$project$Main$gameHeight)),
					_1: {
						ctor: '::',
						_0: A2(
							_evancz$elm_graphics$Collage$move,
							{ctor: '_Tuple2', _0: bird.x, _1: bird.y + groundY},
							_evancz$elm_graphics$Collage$toForm(birdImage)),
						_1: {ctor: '[]'}
					}
				})));
};
var _user$project$Main$initialBird = {x: 30, y: 100, vx: 0, vy: -0.8};
var _user$project$Main$initialGame = {
	windowDimensions: {ctor: '_Tuple2', _0: _user$project$Main$gameWidth, _1: _user$project$Main$gameHeight},
	bird: _user$project$Main$initialBird
};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialGame, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Bird = F4(
	function (a, b, c, d) {
		return {x: a, y: b, vx: c, vy: d};
	});
var _user$project$Main$Game = F2(
	function (a, b) {
		return {windowDimensions: a, bird: b};
	});
var _user$project$Main$KeyDown = function (a) {
	return {ctor: 'KeyDown', _0: a};
};
var _user$project$Main$TimeUpdate = function (a) {
	return {ctor: 'TimeUpdate', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$animation_frame$AnimationFrame$diffs(_user$project$Main$TimeUpdate),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$downs(_user$project$Main$KeyDown),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
